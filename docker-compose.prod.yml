version: "3.1"
services:
  traefik:
    container_name: traefik
    image: traefik:2.1
    restart: always
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro
  mongo:
    image: mongo
    container_name: "mongo"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - "./mongodata:/data/db"
    ports:
      - 27017:27017
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    restart: always
    volumes:
      - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
      - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
      - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: example
    ports:
      - 5672:5672
      - 15672:15672
    restart: on-failure
  blockchain_user:
    build: ./server/src/BlockchainUser
    container_name: "blockchain_user"
    env_file:
      - server/.env
    ports:
      - "4001:4001"
    depends_on:
      - rabbitmq
    restart: on-failure
  blockchain_basetoken:
    build: ./server/src/BlockchainBaseToken
    container_name: "blockchain_basetoken"
    env_file:
      - server/.env
    ports:
      - "4002:4002"
    depends_on:
      - rabbitmq
    restart: on-failure
  blockchain_subtoken:
    build: ./server/src/BlockchainSubToken
    container_name: "blockchain_subtoken"
    env_file:
      - server/.env
    ports:
      - "4003:4003"
    depends_on:
      - rabbitmq
    restart: on-failure
  local_data:
    build: ./server/src/LocalData
    container_name: "local_data"
    env_file:
      - server/.env
    ports:
      - "4004:4004"
    restart: on-failure
    depends_on:
      - mongo
      - rabbitmq
  gateway:
    build: ./server/src/gateway
    container_name: "gateway"
    env_file:
      - server/.env
    ports:
      - "4000:4000"
    restart: always
    depends_on:
      - "blockchain_user"
      - "blockchain_basetoken"
      - "blockchain_subtoken"
      - "local_data"
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.server.rule=Host(`server.qualla.io`)'
      - 'traefik.http.routers.server.tls=true'
      - 'traefik.http.routers.server.tls.certresolver=lets-encrypt'
  relayer:
    build: ./server/src/Relayer
    container_name: "relayer"
    env_file:
      - server/.env
  balance_subscriptions:
    build: ./server/src/BalanceSubscriptions
    container_name: "balance_subscriptions"
    env_file:
      - server/.env
    ports:
      - "5000:5000"
    restart: on-failure
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.server.rule=Host(`subscription.qualla.io`)'
      - 'traefik.http.routers.server.tls=true'
      - 'traefik.http.routers.server.tls.certresolver=lets-encrypt'