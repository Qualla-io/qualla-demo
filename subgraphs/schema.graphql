type User @entity {
  id: ID!
  baseTokens: [BaseToken!] @derivedFrom(field: "owner")
  subscriptions: [SubscriptionToken!] @derivedFrom(field: "owner")
  subscribers: [SubscriptionToken!] @derivedFrom(field: "creator")
  nonce: BigInt
  approved: Boolean
  balance: BigInt
}

type BaseToken @entity {
  id: ID!
  quantity: BigInt!
  owner: User!
  paymentValue: BigInt!
  paymentToken: String!
  activeTokens: [SubscriptionToken!] @derivedFrom(field: "baseToken")
  testID: String
  txHash: String!
  index: BigInt!
  initialSupply: BigInt!
}

type SubscriptionToken @entity {
  id: ID!
  owner: User
  creator: User!
  nextWithdraw: BigInt
  baseToken: BaseToken
  testID: String
}

type NftToken @entity {
  id: ID!
}

type Transaction @entity {
  id: ID! #`${event.transaction.hash.toHex()} - ${event.logIndex.toString()}`
  from: User
  to: User!
  amount: BigInt!
  timestamp: BigInt!
}
